#!/bin/bash

# Function to remove a directory from PATH with colored output
bash_remove_path() {
    local target_path="$1"

    # Define colors using ANSI escape codes
    RED='\033[0;31m'    # Error messages
    GREEN='\033[0;32m'  # Success messages
    YELLOW='\033[0;33m' # Warning messages
    NC='\033[0m'        # No Color (reset)

    # Check if .bashrc exists, if not create it
    if [[ ! -f ~/.bashrc ]]; then
        echo -e "${YELLOW}Warning: .bashrc file not found. Creating a new one.${NC}"
        touch ~/.bashrc
    fi

    # Check if the argument is provided
    if [[ -z "$target_path" ]]; then
        echo -e "${RED}Error: No directory provided.${NC}"
        echo -e "Usage: bash_remove_path <directory>"
        return 1
    fi

    # Check if the directory exists in PATH
    if [[ ":$PATH:" == *":$target_path:"* ]]; then
        # Remove the directory from PATH
        export PATH=$(echo "$PATH" | sed -E "s|:$target_path||g; s|$target_path:||g")
        echo -e "${GREEN}Success: Removed '$target_path' from PATH.${NC}"

        # Optionally remove the export command from .bashrc
        sed -i "/export PATH=\"$target_path:\$PATH\"/d" ~/.bashrc
    else
        echo -e "${YELLOW}Warning: '$target_path' is not in PATH.${NC}"
    fi
}

# Call the function with the provided argument
bash_remove_path "$@"
